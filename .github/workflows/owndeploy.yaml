name: owndeploy

on:
  push:
    branches: [main]
    paths:
      - "task1/*"
env:
  aws_region: ap-southeast-1

jobs:
  validate:
    runs-on: ubuntu-latest
    name: Validate terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: terraform validate1
        uses: dflook/terraform-validate@v1
        id: validate
        with:
          path: task1

      - name: Validate failed
        if: ${{ failure() && steps.validate.outputs.failure-reason == 'validate-failed' }}
        run: echo "terraform validate failed"

  Lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Run terraform fmt check
        run: terraform fmt  -diff -recursive

  tfsec:
    name: tfsec sarif report
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Clone repo
        uses: actions/checkout@master

      - name: tfsec
        uses: tfsec/tfsec-sarif-action@master
        with:
          working_directory: task1
          github_token: ${{ secrets.GITHUB_TOKEN }}
          soft_fail: true
          sarif_file: tfsec.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: tfsec.sarif

  deploy:
    name: deploy new update
    runs-on: ubuntu-latest
    needs: tfsec

    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          aws-region: ${{ env.aws_region }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Init
        id: init
        run: |
          rm -rf .terraform
          terraform init
        working-directory: "./task1/"

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'push'
        run: terraform plan -no-color
        working-directory: "./task1/"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: "./task1/"
